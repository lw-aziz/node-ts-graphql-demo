type Mutation {
  createInvitation(data: CreateInvitationInput!): InvitationData! @isAuthenticated
  acceptInvitation(invitationId: String!): CommonResponse! @isAuthenticated
  rejectInvitation(invitationId: String!): CommonResponse! @isAuthenticated
}
#type Query {
#  getInvitationsByEvent: [InvitationData]! @isAuthenticated
#}
input CreateInvitationInput {
  eventId: String!
  email: String!
}

enum InvitationStatus {
  PENDING
  ACCEPTED
  REJECTED
}

type InvitationData {
  id: String!
  createdAt: Date!
  status: InvitationStatus!
  eventId: String!
  invitedBy: String!
  invitedTo: String!
  #  event: EventData!
}
